imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }

framework:
    #esi:             ~
    #translator:      { fallback: "%locale%" }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # handler_id set to null will use default session handler from php.ini
        handler_id:  ~
    fragments:       ~
    http_method_override: true

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"

# Assetic Configuration
assetic:
    debug:          "%kernel.debug%"
    use_controller: false
    bundles:        [ ]
    #java: /usr/bin/java
    filters:
        cssrewrite: ~
        #closure:
        #    jar: "%kernel.root_dir%/Resources/java/compiler.jar"
        #yui_css:
        #    jar: "%kernel.root_dir%/Resources/java/yuicompressor-2.4.7.jar"

# Doctrine Configuration
doctrine:
    dbal:
        driver:   "%database_driver%"
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.root_dir%/data/data.db3"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #     path:     "%database_path%"

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        auto_mapping: true
stof_doctrine_extensions:
    default_locale: en_US
    orm:
        default:
            tree: false
            timestampable: true
            sluggable: true

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }
# FOS User Configuration
fos_user:
    db_driver: orm
    firewall_name: secure_area
    user_class: ZE\BABundle\Entity\User
    registration:
        confirmation:
            enabled:    false # change to true for required email confirmation
snc_redis:

    clients:
        default:
            type: predis
            alias: default
            dsn: redis://localhost
        cache:
            type: predis
            alias: cache
            dsn: redis://secret@localhost/1
            options:
               profile: 2.2
               connection_timeout: 10
               read_write_timeout: 30
    session:
        client: default
        use_as_default: true

doctrine_cache:
    providers:
        redis_cache:
            type: 'redis'

nelmio_api_doc: ~
lexik_jwt_authentication:
  pass_phrase: "123456"
  private_key_path: "%kernel.root_dir%/var/jwt/private.pem"
  public_key_path: "%kernel.root_dir%/var/jwt/public.pem"
  token_ttl: 86400

nelmio_cors:
    paths:
        '/login_check':
            allow_origin: ['http://localhost:4200','http://localhost:9010']
            allow_headers: ['origin', 'content-type','X-Custom-Auth','authorization']
            allow_methods: ['POST', 'PUT', 'GET', 'DELETE','OPTIONS']
            max_age: 3600
        '/api/*':
            allow_origin: ['http://localhost:4200','http://localhost:9010']
            allow_headers: ['accept', 'origin', 'content-type','X-Custom-Auth','authorization']
            allow_methods: ['POST', 'PUT', 'GET', 'DELETE','OPTIONS']
            max_age: 3600
fos_rest:
    routing_loader:
        default_format: json
             # ensure distinct results, useful when ORM queries are using GROUP BY statements

liip_imagine:
    driver:               gd

    resolvers:
        default:
          web_path:
            web_root: %kernel.root_dir%/../web
            # %kernel.root_dir%/../web/img is the folder where filtered images will be created!
            cache_prefix: media/cache
            # media/cache the prefix of folder where the cached images will be created
    filter_sets:
        cache: ~
        thumb:
            quality: 75
            filters:
                thumbnail: { size: [25, 20], mode: outbound }
        assoc:
            quality: 75
            filters:
                thumbnail: { size: [200, 120], mode: outbound }

